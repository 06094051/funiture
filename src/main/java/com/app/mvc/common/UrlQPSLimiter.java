package com.app.mvc.common;import com.app.mvc.config.GlobalConfig;import com.google.common.collect.Maps;import com.google.common.util.concurrent.RateLimiter;import lombok.extern.slf4j.Slf4j;import java.util.Map;import java.util.concurrent.ConcurrentMap;/** * Created by jimin on 16/5/6. */@Slf4jpublic class UrlQPSLimiter {    private static ConcurrentMap<String, RateLimiter> rateLimiterMap = Maps.newConcurrentMap();    public static void handleUrlQPS(String url) {        if (!isUrlCheckQps(url)) {            return;        }        RateLimiter rateLimiter = rateLimiterMap.get(url);        if (rateLimiter != null) {            rateLimiter.acquire(1);        }    }    public static void setRate(String url, double rate) {        RateLimiter rateLimiter = rateLimiterMap.get(url);        if (rateLimiter == null) {            createRateLimiter(url, rate);        } else if (rateLimiter.getRate() != rate) {            log.info("update rate limiter, url:{},rate:{}", url, rate);            rateLimiter.setRate(rate);        }    }    private static void createRateLimiter(String url, double rate) {        log.info("create rate limiter, url:{},rate:{}", url, rate);        RateLimiter rateLimiter = RateLimiter.create(rate);        rateLimiterMap.put(url, rateLimiter);    }    private static boolean isUrlCheckQps(String url) {        return rateLimiterMap.containsKey(url);    }    public static void onChange() {        Map<String, String> map = GlobalConfig.getMapValue("url.qps.limiter");        for(Map.Entry<String, String> entry : map.entrySet()) {            setRate(entry.getKey(), Double.parseDouble(entry.getValue()));        }    }}